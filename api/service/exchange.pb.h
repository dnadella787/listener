// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: service/exchange.proto
// Protobuf C++ Version: 6.31.1

#ifndef service_2fexchange_2eproto_2epb_2eh
#define service_2fexchange_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_service_2fexchange_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_service_2fexchange_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_service_2fexchange_2eproto;
}  // extern "C"
namespace service {
class Exchange;
struct ExchangeDefaultTypeInternal;
extern ExchangeDefaultTypeInternal _Exchange_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Exchange_class_data_;
class GetExchangeRequest;
struct GetExchangeRequestDefaultTypeInternal;
extern GetExchangeRequestDefaultTypeInternal _GetExchangeRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetExchangeRequest_class_data_;
class GetExchangeResponse;
struct GetExchangeResponseDefaultTypeInternal;
extern GetExchangeResponseDefaultTypeInternal _GetExchangeResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetExchangeResponse_class_data_;
class ListExchangesRequest;
struct ListExchangesRequestDefaultTypeInternal;
extern ListExchangesRequestDefaultTypeInternal _ListExchangesRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ListExchangesRequest_class_data_;
class ListExchangesResponse;
struct ListExchangesResponseDefaultTypeInternal;
extern ListExchangesResponseDefaultTypeInternal _ListExchangesResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ListExchangesResponse_class_data_;
}  // namespace service
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace service {

// ===================================================================


// -------------------------------------------------------------------

class ListExchangesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:service.ListExchangesRequest) */ {
 public:
  inline ListExchangesRequest() : ListExchangesRequest(nullptr) {}
  ~ListExchangesRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListExchangesRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListExchangesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListExchangesRequest(::google::protobuf::internal::ConstantInitialized);

  inline ListExchangesRequest(const ListExchangesRequest& from) : ListExchangesRequest(nullptr, from) {}
  inline ListExchangesRequest(ListExchangesRequest&& from) noexcept
      : ListExchangesRequest(nullptr, ::std::move(from)) {}
  inline ListExchangesRequest& operator=(const ListExchangesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListExchangesRequest& operator=(ListExchangesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListExchangesRequest& default_instance() {
    return *reinterpret_cast<const ListExchangesRequest*>(
        &_ListExchangesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ListExchangesRequest& a, ListExchangesRequest& b) { a.Swap(&b); }
  inline void Swap(ListExchangesRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListExchangesRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListExchangesRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListExchangesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListExchangesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListExchangesRequest& from) { ListExchangesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListExchangesRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "service.ListExchangesRequest"; }

 protected:
  explicit ListExchangesRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ListExchangesRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ListExchangesRequest& from);
  ListExchangesRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ListExchangesRequest&& from) noexcept
      : ListExchangesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCountryFieldNumber = 1,
    kPageTokenFieldNumber = 3,
    kPageSizeFieldNumber = 2,
  };
  // string country = 1;
  void clear_country() ;
  const ::std::string& country() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_country(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_country();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_country();
  void set_allocated_country(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_country() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_country(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_country();

  public:
  // string page_token = 3;
  void clear_page_token() ;
  const ::std::string& page_token() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_page_token(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_page_token();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_page_token();
  void set_allocated_page_token(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_page_token() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_page_token(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_page_token();

  public:
  // int32 page_size = 2;
  void clear_page_size() ;
  ::int32_t page_size() const;
  void set_page_size(::int32_t value);

  private:
  ::int32_t _internal_page_size() const;
  void _internal_set_page_size(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:service.ListExchangesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 54,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ListExchangesRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr country_;
    ::google::protobuf::internal::ArenaStringPtr page_token_;
    ::int32_t page_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fexchange_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ListExchangesRequest_class_data_;
// -------------------------------------------------------------------

class GetExchangeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:service.GetExchangeRequest) */ {
 public:
  inline GetExchangeRequest() : GetExchangeRequest(nullptr) {}
  ~GetExchangeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetExchangeRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetExchangeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetExchangeRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetExchangeRequest(const GetExchangeRequest& from) : GetExchangeRequest(nullptr, from) {}
  inline GetExchangeRequest(GetExchangeRequest&& from) noexcept
      : GetExchangeRequest(nullptr, ::std::move(from)) {}
  inline GetExchangeRequest& operator=(const GetExchangeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExchangeRequest& operator=(GetExchangeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExchangeRequest& default_instance() {
    return *reinterpret_cast<const GetExchangeRequest*>(
        &_GetExchangeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GetExchangeRequest& a, GetExchangeRequest& b) { a.Swap(&b); }
  inline void Swap(GetExchangeRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExchangeRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetExchangeRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetExchangeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetExchangeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetExchangeRequest& from) { GetExchangeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetExchangeRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "service.GetExchangeRequest"; }

 protected:
  explicit GetExchangeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetExchangeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetExchangeRequest& from);
  GetExchangeRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetExchangeRequest&& from) noexcept
      : GetExchangeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCodeFieldNumber = 1,
  };
  // string code = 1;
  void clear_code() ;
  const ::std::string& code() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_code();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_code();
  void set_allocated_code(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_code() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_code(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_code();

  public:
  // @@protoc_insertion_point(class_scope:service.GetExchangeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 39,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetExchangeRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr code_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fexchange_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetExchangeRequest_class_data_;
// -------------------------------------------------------------------

class Exchange final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:service.Exchange) */ {
 public:
  inline Exchange() : Exchange(nullptr) {}
  ~Exchange() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Exchange* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Exchange));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Exchange(::google::protobuf::internal::ConstantInitialized);

  inline Exchange(const Exchange& from) : Exchange(nullptr, from) {}
  inline Exchange(Exchange&& from) noexcept
      : Exchange(nullptr, ::std::move(from)) {}
  inline Exchange& operator=(const Exchange& from) {
    CopyFrom(from);
    return *this;
  }
  inline Exchange& operator=(Exchange&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Exchange& default_instance() {
    return *reinterpret_cast<const Exchange*>(
        &_Exchange_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(Exchange& a, Exchange& b) { a.Swap(&b); }
  inline void Swap(Exchange* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Exchange* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Exchange* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Exchange>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Exchange& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Exchange& from) { Exchange::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Exchange* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "service.Exchange"; }

 protected:
  explicit Exchange(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Exchange(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Exchange& from);
  Exchange(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Exchange&& from) noexcept
      : Exchange(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCodeFieldNumber = 1,
    kFullNameFieldNumber = 2,
    kCityFieldNumber = 5,
    kCountryFieldNumber = 6,
    kValueFieldNumber = 3,
    kCurrentPeRatioFieldNumber = 4,
  };
  // string code = 1;
  void clear_code() ;
  const ::std::string& code() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_code();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_code();
  void set_allocated_code(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_code() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_code(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_code();

  public:
  // string full_name = 2;
  void clear_full_name() ;
  const ::std::string& full_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_full_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_full_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_full_name();
  void set_allocated_full_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_full_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_full_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_full_name();

  public:
  // string city = 5;
  void clear_city() ;
  const ::std::string& city() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_city(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_city();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_city();
  void set_allocated_city(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_city() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_city(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_city();

  public:
  // string country = 6;
  void clear_country() ;
  const ::std::string& country() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_country(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_country();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_country();
  void set_allocated_country(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_country() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_country(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_country();

  public:
  // float value = 3;
  void clear_value() ;
  float value() const;
  void set_value(float value);

  private:
  float _internal_value() const;
  void _internal_set_value(float value);

  public:
  // float current_pe_ratio = 4;
  void clear_current_pe_ratio() ;
  float current_pe_ratio() const;
  void set_current_pe_ratio(float value);

  private:
  float _internal_current_pe_ratio() const;
  void _internal_set_current_pe_ratio(float value);

  public:
  // @@protoc_insertion_point(class_scope:service.Exchange)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   0, 49,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Exchange& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr code_;
    ::google::protobuf::internal::ArenaStringPtr full_name_;
    ::google::protobuf::internal::ArenaStringPtr city_;
    ::google::protobuf::internal::ArenaStringPtr country_;
    float value_;
    float current_pe_ratio_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fexchange_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Exchange_class_data_;
// -------------------------------------------------------------------

class ListExchangesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:service.ListExchangesResponse) */ {
 public:
  inline ListExchangesResponse() : ListExchangesResponse(nullptr) {}
  ~ListExchangesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListExchangesResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListExchangesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListExchangesResponse(::google::protobuf::internal::ConstantInitialized);

  inline ListExchangesResponse(const ListExchangesResponse& from) : ListExchangesResponse(nullptr, from) {}
  inline ListExchangesResponse(ListExchangesResponse&& from) noexcept
      : ListExchangesResponse(nullptr, ::std::move(from)) {}
  inline ListExchangesResponse& operator=(const ListExchangesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListExchangesResponse& operator=(ListExchangesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListExchangesResponse& default_instance() {
    return *reinterpret_cast<const ListExchangesResponse*>(
        &_ListExchangesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ListExchangesResponse& a, ListExchangesResponse& b) { a.Swap(&b); }
  inline void Swap(ListExchangesResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListExchangesResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListExchangesResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListExchangesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListExchangesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListExchangesResponse& from) { ListExchangesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListExchangesResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "service.ListExchangesResponse"; }

 protected:
  explicit ListExchangesResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ListExchangesResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ListExchangesResponse& from);
  ListExchangesResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ListExchangesResponse&& from) noexcept
      : ListExchangesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExchangeFieldNumber = 1,
    kNextPageTokenFieldNumber = 2,
  };
  // repeated .service.Exchange exchange = 1;
  int exchange_size() const;
  private:
  int _internal_exchange_size() const;

  public:
  void clear_exchange() ;
  ::service::Exchange* PROTOBUF_NONNULL mutable_exchange(int index);
  ::google::protobuf::RepeatedPtrField<::service::Exchange>* PROTOBUF_NONNULL mutable_exchange();

  private:
  const ::google::protobuf::RepeatedPtrField<::service::Exchange>& _internal_exchange() const;
  ::google::protobuf::RepeatedPtrField<::service::Exchange>* PROTOBUF_NONNULL _internal_mutable_exchange();
  public:
  const ::service::Exchange& exchange(int index) const;
  ::service::Exchange* PROTOBUF_NONNULL add_exchange();
  const ::google::protobuf::RepeatedPtrField<::service::Exchange>& exchange() const;
  // string next_page_token = 2;
  void clear_next_page_token() ;
  const ::std::string& next_page_token() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_next_page_token(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_next_page_token();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_next_page_token();
  void set_allocated_next_page_token(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_next_page_token() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_next_page_token(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_next_page_token();

  public:
  // @@protoc_insertion_point(class_scope:service.ListExchangesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 53,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ListExchangesResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::service::Exchange > exchange_;
    ::google::protobuf::internal::ArenaStringPtr next_page_token_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fexchange_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ListExchangesResponse_class_data_;
// -------------------------------------------------------------------

class GetExchangeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:service.GetExchangeResponse) */ {
 public:
  inline GetExchangeResponse() : GetExchangeResponse(nullptr) {}
  ~GetExchangeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetExchangeResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetExchangeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetExchangeResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetExchangeResponse(const GetExchangeResponse& from) : GetExchangeResponse(nullptr, from) {}
  inline GetExchangeResponse(GetExchangeResponse&& from) noexcept
      : GetExchangeResponse(nullptr, ::std::move(from)) {}
  inline GetExchangeResponse& operator=(const GetExchangeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExchangeResponse& operator=(GetExchangeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExchangeResponse& default_instance() {
    return *reinterpret_cast<const GetExchangeResponse*>(
        &_GetExchangeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(GetExchangeResponse& a, GetExchangeResponse& b) { a.Swap(&b); }
  inline void Swap(GetExchangeResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExchangeResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetExchangeResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetExchangeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetExchangeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetExchangeResponse& from) { GetExchangeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetExchangeResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "service.GetExchangeResponse"; }

 protected:
  explicit GetExchangeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetExchangeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetExchangeResponse& from);
  GetExchangeResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetExchangeResponse&& from) noexcept
      : GetExchangeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExchangeFieldNumber = 1,
  };
  // .service.Exchange exchange = 1;
  bool has_exchange() const;
  void clear_exchange() ;
  const ::service::Exchange& exchange() const;
  [[nodiscard]] ::service::Exchange* PROTOBUF_NULLABLE release_exchange();
  ::service::Exchange* PROTOBUF_NONNULL mutable_exchange();
  void set_allocated_exchange(::service::Exchange* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_exchange(::service::Exchange* PROTOBUF_NULLABLE value);
  ::service::Exchange* PROTOBUF_NULLABLE unsafe_arena_release_exchange();

  private:
  const ::service::Exchange& _internal_exchange() const;
  ::service::Exchange* PROTOBUF_NONNULL _internal_mutable_exchange();

  public:
  // @@protoc_insertion_point(class_scope:service.GetExchangeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetExchangeResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::service::Exchange* PROTOBUF_NULLABLE exchange_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fexchange_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetExchangeResponse_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GetExchangeRequest

// string code = 1;
inline void GetExchangeRequest::clear_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& GetExchangeRequest::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:service.GetExchangeRequest.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetExchangeRequest::set_code(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:service.GetExchangeRequest.code)
}
inline ::std::string* PROTOBUF_NONNULL GetExchangeRequest::mutable_code()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:service.GetExchangeRequest.code)
  return _s;
}
inline const ::std::string& GetExchangeRequest::_internal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_.Get();
}
inline void GetExchangeRequest::_internal_set_code(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.code_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetExchangeRequest::_internal_mutable_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.code_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetExchangeRequest::release_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:service.GetExchangeRequest.code)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.code_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.code_.Set("", GetArena());
  }
  return released;
}
inline void GetExchangeRequest::set_allocated_code(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.code_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.code_.IsDefault()) {
    _impl_.code_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:service.GetExchangeRequest.code)
}

// -------------------------------------------------------------------

// GetExchangeResponse

// .service.Exchange exchange = 1;
inline bool GetExchangeResponse::has_exchange() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.exchange_ != nullptr);
  return value;
}
inline void GetExchangeResponse::clear_exchange() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.exchange_ != nullptr) _impl_.exchange_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::service::Exchange& GetExchangeResponse::_internal_exchange() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::service::Exchange* p = _impl_.exchange_;
  return p != nullptr ? *p : reinterpret_cast<const ::service::Exchange&>(::service::_Exchange_default_instance_);
}
inline const ::service::Exchange& GetExchangeResponse::exchange() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:service.GetExchangeResponse.exchange)
  return _internal_exchange();
}
inline void GetExchangeResponse::unsafe_arena_set_allocated_exchange(
    ::service::Exchange* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.exchange_);
  }
  _impl_.exchange_ = reinterpret_cast<::service::Exchange*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:service.GetExchangeResponse.exchange)
}
inline ::service::Exchange* PROTOBUF_NULLABLE GetExchangeResponse::release_exchange() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::service::Exchange* released = _impl_.exchange_;
  _impl_.exchange_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::service::Exchange* PROTOBUF_NULLABLE GetExchangeResponse::unsafe_arena_release_exchange() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:service.GetExchangeResponse.exchange)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::service::Exchange* temp = _impl_.exchange_;
  _impl_.exchange_ = nullptr;
  return temp;
}
inline ::service::Exchange* PROTOBUF_NONNULL GetExchangeResponse::_internal_mutable_exchange() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.exchange_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::service::Exchange>(GetArena());
    _impl_.exchange_ = reinterpret_cast<::service::Exchange*>(p);
  }
  return _impl_.exchange_;
}
inline ::service::Exchange* PROTOBUF_NONNULL GetExchangeResponse::mutable_exchange()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::service::Exchange* _msg = _internal_mutable_exchange();
  // @@protoc_insertion_point(field_mutable:service.GetExchangeResponse.exchange)
  return _msg;
}
inline void GetExchangeResponse::set_allocated_exchange(::service::Exchange* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.exchange_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.exchange_ = reinterpret_cast<::service::Exchange*>(value);
  // @@protoc_insertion_point(field_set_allocated:service.GetExchangeResponse.exchange)
}

// -------------------------------------------------------------------

// ListExchangesRequest

// string country = 1;
inline void ListExchangesRequest::clear_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.country_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ListExchangesRequest::country() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:service.ListExchangesRequest.country)
  return _internal_country();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ListExchangesRequest::set_country(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.country_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:service.ListExchangesRequest.country)
}
inline ::std::string* PROTOBUF_NONNULL ListExchangesRequest::mutable_country()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_country();
  // @@protoc_insertion_point(field_mutable:service.ListExchangesRequest.country)
  return _s;
}
inline const ::std::string& ListExchangesRequest::_internal_country() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.country_.Get();
}
inline void ListExchangesRequest::_internal_set_country(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.country_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ListExchangesRequest::_internal_mutable_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.country_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ListExchangesRequest::release_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:service.ListExchangesRequest.country)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.country_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.country_.Set("", GetArena());
  }
  return released;
}
inline void ListExchangesRequest::set_allocated_country(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.country_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.country_.IsDefault()) {
    _impl_.country_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:service.ListExchangesRequest.country)
}

// int32 page_size = 2;
inline void ListExchangesRequest::clear_page_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t ListExchangesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:service.ListExchangesRequest.page_size)
  return _internal_page_size();
}
inline void ListExchangesRequest::set_page_size(::int32_t value) {
  _internal_set_page_size(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:service.ListExchangesRequest.page_size)
}
inline ::int32_t ListExchangesRequest::_internal_page_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_size_;
}
inline void ListExchangesRequest::_internal_set_page_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = value;
}

// string page_token = 3;
inline void ListExchangesRequest::clear_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& ListExchangesRequest::page_token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:service.ListExchangesRequest.page_token)
  return _internal_page_token();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ListExchangesRequest::set_page_token(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.page_token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:service.ListExchangesRequest.page_token)
}
inline ::std::string* PROTOBUF_NONNULL ListExchangesRequest::mutable_page_token()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_page_token();
  // @@protoc_insertion_point(field_mutable:service.ListExchangesRequest.page_token)
  return _s;
}
inline const ::std::string& ListExchangesRequest::_internal_page_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_token_.Get();
}
inline void ListExchangesRequest::_internal_set_page_token(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.page_token_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ListExchangesRequest::_internal_mutable_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.page_token_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ListExchangesRequest::release_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:service.ListExchangesRequest.page_token)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.page_token_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.page_token_.Set("", GetArena());
  }
  return released;
}
inline void ListExchangesRequest::set_allocated_page_token(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.page_token_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.page_token_.IsDefault()) {
    _impl_.page_token_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:service.ListExchangesRequest.page_token)
}

// -------------------------------------------------------------------

// ListExchangesResponse

// repeated .service.Exchange exchange = 1;
inline int ListExchangesResponse::_internal_exchange_size() const {
  return _internal_exchange().size();
}
inline int ListExchangesResponse::exchange_size() const {
  return _internal_exchange_size();
}
inline void ListExchangesResponse::clear_exchange() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exchange_.Clear();
}
inline ::service::Exchange* PROTOBUF_NONNULL ListExchangesResponse::mutable_exchange(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:service.ListExchangesResponse.exchange)
  return _internal_mutable_exchange()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::service::Exchange>* PROTOBUF_NONNULL ListExchangesResponse::mutable_exchange()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:service.ListExchangesResponse.exchange)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_exchange();
}
inline const ::service::Exchange& ListExchangesResponse::exchange(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:service.ListExchangesResponse.exchange)
  return _internal_exchange().Get(index);
}
inline ::service::Exchange* PROTOBUF_NONNULL ListExchangesResponse::add_exchange()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::service::Exchange* _add = _internal_mutable_exchange()->Add();
  // @@protoc_insertion_point(field_add:service.ListExchangesResponse.exchange)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::service::Exchange>& ListExchangesResponse::exchange() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:service.ListExchangesResponse.exchange)
  return _internal_exchange();
}
inline const ::google::protobuf::RepeatedPtrField<::service::Exchange>&
ListExchangesResponse::_internal_exchange() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exchange_;
}
inline ::google::protobuf::RepeatedPtrField<::service::Exchange>* PROTOBUF_NONNULL
ListExchangesResponse::_internal_mutable_exchange() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.exchange_;
}

// string next_page_token = 2;
inline void ListExchangesResponse::clear_next_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_page_token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ListExchangesResponse::next_page_token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:service.ListExchangesResponse.next_page_token)
  return _internal_next_page_token();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ListExchangesResponse::set_next_page_token(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.next_page_token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:service.ListExchangesResponse.next_page_token)
}
inline ::std::string* PROTOBUF_NONNULL ListExchangesResponse::mutable_next_page_token()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_next_page_token();
  // @@protoc_insertion_point(field_mutable:service.ListExchangesResponse.next_page_token)
  return _s;
}
inline const ::std::string& ListExchangesResponse::_internal_next_page_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.next_page_token_.Get();
}
inline void ListExchangesResponse::_internal_set_next_page_token(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.next_page_token_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ListExchangesResponse::_internal_mutable_next_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.next_page_token_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ListExchangesResponse::release_next_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:service.ListExchangesResponse.next_page_token)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.next_page_token_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.next_page_token_.Set("", GetArena());
  }
  return released;
}
inline void ListExchangesResponse::set_allocated_next_page_token(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.next_page_token_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.next_page_token_.IsDefault()) {
    _impl_.next_page_token_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:service.ListExchangesResponse.next_page_token)
}

// -------------------------------------------------------------------

// Exchange

// string code = 1;
inline void Exchange::clear_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Exchange::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:service.Exchange.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Exchange::set_code(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:service.Exchange.code)
}
inline ::std::string* PROTOBUF_NONNULL Exchange::mutable_code()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:service.Exchange.code)
  return _s;
}
inline const ::std::string& Exchange::_internal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_.Get();
}
inline void Exchange::_internal_set_code(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.code_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Exchange::_internal_mutable_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.code_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Exchange::release_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:service.Exchange.code)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.code_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.code_.Set("", GetArena());
  }
  return released;
}
inline void Exchange::set_allocated_code(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.code_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.code_.IsDefault()) {
    _impl_.code_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:service.Exchange.code)
}

// string full_name = 2;
inline void Exchange::clear_full_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.full_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& Exchange::full_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:service.Exchange.full_name)
  return _internal_full_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Exchange::set_full_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.full_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:service.Exchange.full_name)
}
inline ::std::string* PROTOBUF_NONNULL Exchange::mutable_full_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_full_name();
  // @@protoc_insertion_point(field_mutable:service.Exchange.full_name)
  return _s;
}
inline const ::std::string& Exchange::_internal_full_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.full_name_.Get();
}
inline void Exchange::_internal_set_full_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.full_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Exchange::_internal_mutable_full_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.full_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Exchange::release_full_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:service.Exchange.full_name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.full_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.full_name_.Set("", GetArena());
  }
  return released;
}
inline void Exchange::set_allocated_full_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.full_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.full_name_.IsDefault()) {
    _impl_.full_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:service.Exchange.full_name)
}

// float value = 3;
inline void Exchange::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float Exchange::value() const {
  // @@protoc_insertion_point(field_get:service.Exchange.value)
  return _internal_value();
}
inline void Exchange::set_value(float value) {
  _internal_set_value(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:service.Exchange.value)
}
inline float Exchange::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void Exchange::_internal_set_value(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// float current_pe_ratio = 4;
inline void Exchange::clear_current_pe_ratio() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_pe_ratio_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline float Exchange::current_pe_ratio() const {
  // @@protoc_insertion_point(field_get:service.Exchange.current_pe_ratio)
  return _internal_current_pe_ratio();
}
inline void Exchange::set_current_pe_ratio(float value) {
  _internal_set_current_pe_ratio(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:service.Exchange.current_pe_ratio)
}
inline float Exchange::_internal_current_pe_ratio() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.current_pe_ratio_;
}
inline void Exchange::_internal_set_current_pe_ratio(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_pe_ratio_ = value;
}

// string city = 5;
inline void Exchange::clear_city() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.city_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& Exchange::city() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:service.Exchange.city)
  return _internal_city();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Exchange::set_city(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.city_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:service.Exchange.city)
}
inline ::std::string* PROTOBUF_NONNULL Exchange::mutable_city()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_city();
  // @@protoc_insertion_point(field_mutable:service.Exchange.city)
  return _s;
}
inline const ::std::string& Exchange::_internal_city() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.city_.Get();
}
inline void Exchange::_internal_set_city(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.city_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Exchange::_internal_mutable_city() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.city_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Exchange::release_city() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:service.Exchange.city)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.city_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.city_.Set("", GetArena());
  }
  return released;
}
inline void Exchange::set_allocated_city(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.city_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.city_.IsDefault()) {
    _impl_.city_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:service.Exchange.city)
}

// string country = 6;
inline void Exchange::clear_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.country_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& Exchange::country() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:service.Exchange.country)
  return _internal_country();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Exchange::set_country(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.country_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:service.Exchange.country)
}
inline ::std::string* PROTOBUF_NONNULL Exchange::mutable_country()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_country();
  // @@protoc_insertion_point(field_mutable:service.Exchange.country)
  return _s;
}
inline const ::std::string& Exchange::_internal_country() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.country_.Get();
}
inline void Exchange::_internal_set_country(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.country_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Exchange::_internal_mutable_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.country_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Exchange::release_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:service.Exchange.country)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.country_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.country_.Set("", GetArena());
  }
  return released;
}
inline void Exchange::set_allocated_country(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.country_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.country_.IsDefault()) {
    _impl_.country_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:service.Exchange.country)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace service


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // service_2fexchange_2eproto_2epb_2eh
